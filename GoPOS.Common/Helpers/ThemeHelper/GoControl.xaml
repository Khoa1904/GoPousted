<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:fa="http://schemas.fontawesome.com/icons/fonts" 
                    xmlns:fs="http://schemas.fontawesome.com/icons/svg" 
                    xmlns:c="clr-namespace:GoPOS.Common.Views"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">
    
    <Style TargetType="{x:Type c:GoRadioButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="#4A4A4A" BorderBrush="#2A2A2A" BorderThickness="1" CornerRadius="8">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <fa:FontAwesome x:Name="icon" Icon="Solid_CircleCheck" Margin="4 6 0 0" FontSize="14" />
                            <ContentPresenter x:Name="content" Height="22" Margin="4 6 6 0" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#A5C5FA" />
                            <Setter Property="Foreground" TargetName="icon" Value="#A63B6E" />
                            <Setter Property="Foreground" Value="#2A2A2A" />
                            <!--<Setter Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#4A4A4A" />
                            <Setter Property="Foreground" TargetName="icon" Value="#9A9A9A" />
                            <Setter Property="Foreground" Value="#EAEAEA" />
                            <!--<Setter Property="FontWeight" Value="Normal"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type c:GoButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type c:GoDatePicker}">
        <Setter Property="Width" Value="102" />
        <!--<Setter Property="Height" Value="28" />-->
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SelectedDate" Value="{x:Static sys:DateTime.Now}" />
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="CalendarStyle">
            <Setter.Value>
                <Style TargetType="{x:Type Calendar}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Calendar}">
                                <Border BorderBrush="LightBlue" BorderThickness="1">
                                    <StackPanel Background="AliceBlue">
                                        <Viewbox Height="auto" Width="auto">
                                            <CalendarItem x:Name="PART_CalendarItem" Background="{TemplateBinding Background}" 
                                                          BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Style="{TemplateBinding Calendar.CalendarItemStyle}" />
                                        </Viewbox>
                                    </StackPanel>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="CalendarDayButtonStyle">
                        <Setter.Value>
                            <Style TargetType="CalendarDayButton">
                                <Setter Property="FontSize" Value="13" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="IsReadOnly" Value="True" />
            </Style>
            <Style TargetType="ContentControl">
                <Style.Triggers>
                    <Trigger Property="Name" Value="PART_Watermark">
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="{x:Type ProgressBar}" x:Key="GoProgressBar">
        <Setter Property="Height" Value="30" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Background" Value="#326DCB" />
        <Setter Property="Foreground" Value="#2B569A" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#2B569A" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid x:Name="grid" Background="Transparent">
                        <ProgressBar Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Value="{TemplateBinding Value}" Maximum="{TemplateBinding Maximum}" />
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" Foreground="White">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}/{1}">
                                    <Binding RelativeSource="{RelativeSource AncestorType=ProgressBar}" Path="Value" />
                                    <Binding RelativeSource="{RelativeSource AncestorType=ProgressBar}" Path="Maximum" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </Grid>
                    <!-- <ControlTemplate.Triggers> -->
                    <!--     <Trigger Property="Value" Value="100"> -->
                    <!--         <Setter Property="Foreground" Value="Transparent" /> -->
                    <!--     </Trigger> -->
                    <!-- </ControlTemplate.Triggers> -->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--SET TOGGLEBUTTON BEHAVIOR-->
    <Style TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Arrow" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>